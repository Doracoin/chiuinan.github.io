<html>

<head>
<meta http-equiv="Content-Type" content="text/html; charset=big5">
<title>威知資訊</title>
</head>

<body>

<p align="center"><font face="標楷體" color="#800000"><big>威知資訊（2003/01-2015/05）</big></font></p>

<p><b>威知資訊股份有限公司研發副總經理</b>（2003/01-2015/05）

<ol>
  <li>脫離拓墣科技成立威知資訊後，我向總經理James表明個人的能力與興趣：產品經理／專案經理／研發經理／技術研發的工作產能比約為1:1.5:4:8，而後者也是我最大的興趣所在。於是James除去我前三項的工作職掌，讓我專心於核心軟體的研發。至於原本施行的量化績效考核制度，則因會計部門反應動態調薪制難以投保勞健保，於是廢除了原訂的獎懲制度。在無法即時獎懲、接任的研發經理亦疏於管理之下，量化指標逐漸流於形式，最後不了了之，殊為可惜。</li>
  <li>2003年3月進行的檔管局專案評比，WebGenie採用了8台電腦進行分散式處理，仍無法承受一千萬筆的資料量。主要因為WebGenie 2.0版最初的設計限制為100萬筆文件、最多使用32MB記憶體，這在當時主流機器為Pentium 4/256MB RAM的年代已是天量了。但兩年後的機器大多有加裝記憶體至1GB，其限制已可再放寬。於是花了3個月時間重新設計索引檔結構與更快的處理演算法，推出WebGenie 3.0版，文件量限制調高至1000萬筆、最多使用256MB記憶體，其處理中時17萬筆新聞文字檔資料的時間再次由90分鐘降為13分鐘。由本版開始，WebGenie的效率性已超越絕大部份的競爭對手，該時期只要是透過效能評比決勝負的專案，幾乎十拿九穩都由威知取得。</li>
  <li>2003年7月，鑑於曾顧問的【數位文件關鍵特徵之自動擷取方法】（2002年已申請專利），所取得的新關鍵詞良率不高，客戶經常質疑提示詞與關聯詞都會出現一堆莫名其妙的怪詞，於是我在WebGenie的相關處理裡，加入了多種詞庫與濾詞規則，如中文姓名處理、中文數字處理、單位詞處理等，將良率從85%提升至99%。不過它的副作用便是會將一些好詞也一併濾除，好壞難講，不過在提示詞與關聯詞的顯示上，確實比之前好太多，客戶也不曾再抱怨此一部份了。</li>
  <li>2003年10月，鑑於剖析文件檔的第三方元件良莠不齊，常導致WebGenie當機頻繁，於是決定廢除第三方元件，自解所有的文件檔。為了縮短開發時程，我將PDF檔的剖析交給能力最強的兩位研發人員處理，然而九個月過去，所有文件檔格式的剖析都已被我處理完畢，唯獨PDF檔的剖析一直難產。於是我便親自處理，三個月便將之解決，還利用自己在排版方面的專業知識，解決了其他軟體無法解決的直排中文與書眉頁碼干擾的問題。此事件讓我感到，開發高精密、高技術的核心軟體，研發人員的素質遠比數量重要，十個臭皮匠也不會勝過一個諸葛亮，因為人多素質低的情況下，很有可能會變成一事無成。</li>
  <li>2004年7月，實作了曾顧問給的歸類公式，原本是要做為分類的類別建議，但因效果不佳，成為WebGenie裡殘留的無用功能。事實上，WebGenie 2.0版實作的自動分類功能，因為具有自動學習的特性，原本是具有賣相的，但因為需要有一定數量的正確分類文件，初期人工調校工作無法避免，雖然也賣了幾家客戶，但在推行困難之下，最後也變成了殘留的無用功能，其實是很可惜的。</li>
  <li>2005年初，調整WebGenie成為Client/Server架構，Client端採用socket做為通訊界面，Server端則為多重執行緒服務，並配合分散式架構與索引同步模組，WebGenie至此邁入穩定階段。同年7月修改核心全面支援Unicode，並可支援多種語系，WebGenie正式走向國際化。雖然WebGenie在我的持續改良下不斷進步，但外圍的研發團隊因研發經理的不擅管理，已經呈現一團亂象。許多專案毫無計畫地執行，架構不良，亦無任何文件或註解，再加上研發人員不斷流動，維護開始變得非常困難，最後James只好將我調出來救火。</li>
  <li>2006年中期，受命重新規劃並開發「智慧型專利文件分析管理系統」（IPAM）2.0版，當需求已收集完畢，正分析到一半時，卻被臨時喊卡，調往處理更急的工作，白白浪費了5個月的人力時間成本。</li>
  <li>2006年底，為解決新聞擷取程式過多難管理的問題，受命開發「新聞擷取平台系統」Extractor，以回報並跟催追蹤新聞擷取程式問題，並能自動更新客戶端的新聞擷取程式，不必再讓研發人員來回奔波。2008年中期則再引入伺服器備援的安全機制。</li>
  <li>2007年中期，我開始規劃WebGenie 4.0版，打算採用文法規則分析法來徹底解決新關鍵詞良率、以及好詞誤濾除的問題。於是開始著手整理相關的資料長達一年多，這些資料包括Unicode標準化字碼、拉丁語系字母大小寫對應、中文簡易字典、中文同義字、中文單字詞性標記、英文單字詞性標記、中文詞彙詞性標記、繁簡中文互譯、易錯字表等等。之後工作又再度被岔斷，致使資料未完全整理完畢，迄今亦未再有機會加以補齊。2012年中期，在James的要求之下，將詞性標記資料寫成元件供研發人員試用，但最後並無任何實際的產品出現。</li>
  <li>2008年中期，因應專案需求實作出SSL/TLS通訊協定，讓WebGenie可以支援HTTPS網頁。於是我對各種加解密演算法，如RSA、3DES、AES等，甚至憑證處理，都相當熟悉，資料保密成為我的另一項專長，對於之後解析加密的檔案格式更是得心應手。</li>
  <li>2009年初，受命帶隊開發「快速詢答系統」（FAQ），但才進行約兩個月，又再度喊卡，調往處理更急的工作。
  <li>2009年中期，因應清風園專案，受命重新規劃並帶隊開發出「市場情報知識系統」（MIKS）2.0版，讓此一主力產品更易維護與擴充。</li>
  <li>2010年中期，受命負責「漁業署漁業資訊服務網」專案，工作職掌又重回到專案經理的角色。</li>
  <li>2010年底，實作了曾顧問給的指定字數摘要演算法，可將一篇約新聞長度的文章縮短成數十字的摘要，適合做為簡訊通知，效果雖不錯，但最後並未做成產品銷售，成為WebGenie另一個殘留的無用功能。</li>
  <li>2011年中期，受命重新規劃並開發「首長信箱管理系統」，並以衛生署現行維護專案做為改良對象。由於必須配合衛生署已完成並上線的專案功能，導致整個架構處處受制，同時衛生署專案也沒有任何開發文件，面對著數十個資料表，完全無法得知其間的關聯，欄位的意義亦不明。而且因為長期外調救火，心力已交瘁，WebGenie核心的改良幾乎呈現停滯狀態，只得建請James停止再指派我進行救火的工作。</li>
  <li>2012年初，重新規劃並開發WebGenie的索引同步模組2.0版，將原本以檔案伺服器為存取中心的形態，改變為P2P傳輸模式。除了減少佔用檔案伺服器的硬碟空間外，也可透過相互通訊得知應異動的檔案，並加以壓縮，減少實際的檔案傳輸量。同年又進行了WebGenie排序、篩選、統計的的加速處理。</li>
  <li>2013年中期，WebGenie開始支援IPv6，同時將WebGenie 32位元版修改成Windows 64位元版。2014年中期則再配合關貿局專案，移植成AIX 64位元版。</li>
  <li>2013年底，由於不少離職員工均前往同一競爭對手公司就職，而所提出的方案均針對威知的弱點，且疑似有盜用WebGenie核心功能之嫌。為此重新制訂WebGenie序號管控界面，並取消離線註冊機制。但對於已流出去的舊版WebGenie與離線註冊程式，仍無法加以阻絕。此事件讓我對疑人不用、用人不疑這句話大打折扣，於是所有資料均不再對內完全公開，只交付給需要知道的員工即可。</li>
  <li>2014年中期，在董事長Roger（陳鴻錦）的要求下，完成「中文姓名、詞彙比對元件」，以取代原Patrick寫的程式，兩者的效能相差甚遠，讓Roger大為讚賞。接著再實作他所提出的人物關聯摘句演算法，用在犯罪偵防的人物關聯上，效果相當好。可惜這項功能警政單位雖有高度興趣，最終仍未能拿下專案。</li>
  <li>2014年底，進行了WebGenie底層元件效能最佳化調校，將整體效能又加快了近一倍。尤其是自己寫的排序元件，排序1000萬筆數值資料的效能，是C++ STL排序函數的3∼8倍，若是排序字串資料，更高達13倍。之後再研究出字串轉ID更快的演算法，其處理500萬筆資料的效能比原WebGenie的演算法還要快上1000倍！這些測試結果，讓我感到自己對於軟體效能改善方面已愈來愈得心應手。</li>
  <li>2015年5月，公司資金用罄、決定解散，心中既驚訝又十分不捨。事實上從公司開始經營困難到倒閉這段期間，James幾乎都沒有向我透露公司經營上的相關問題。公司停業後，我與James、Roger閒聊探討公司倒閉的原因，大致為：
     <ol type="a">
        <li><b>經營方向走偏</b>：後期威知的專案幾乎都是EIP或KSP之類的入口網站，核心軟體反成了配角。而且這類的專案需要大量的研發人力，甚至還要有人駐點處理，在沒有嚴格控管成本之下，人是愈請愈多，專案卻愈做愈虧。James也承認當時做了錯誤的決策，導致威知最後幾年大幅虧損。</li>
        <li><b>缺乏強有力的研發經理</b>：這是個人的看法，雖不是主要原因，但應該也是間接原因。如果威知一開始有個能力夠好的研發經理，中間就不會空轉了好幾年，產品也許已更上層樓，或許就不會導致飲鴆止渴似地去接一堆不該接的專案。然而最初我卸除了研發經理職責後，卻未能協助James覓妥研發經理以管理好研發部門，其實應該算是個人嚴重的失職之處，每想到這點，都讓我深深自責不已。</li>
     </ol>
</ol>

<p><hr>

<p>離職證明：<br>
<img src="work-41.jpg">

</body>
</html>
